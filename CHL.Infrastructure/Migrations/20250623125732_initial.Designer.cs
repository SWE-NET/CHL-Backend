// <auto-generated />
using System;
using CHL.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CHL.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250623125732_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CHL.Domain.Models.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dob");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("instagram");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nation");

                    b.Property<string>("Overall_score")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("overall_score");

                    b.Property<string>("Prezident")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("prezident");

                    b.Property<string>("Twitter")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("twitter");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("CHL.Domain.Models.Coach", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("Club_id")
                        .HasColumnType("uuid")
                        .HasColumnName("club_id");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dob");

                    b.Property<int>("Experience")
                        .HasColumnType("integer")
                        .HasColumnName("experience");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<string>("Nation")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nation");

                    b.HasKey("Id");

                    b.HasIndex("Club_id")
                        .IsUnique();

                    b.ToTable("Coaches");
                });

            modelBuilder.Entity("CHL.Domain.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("Club1Id")
                        .HasColumnType("uuid")
                        .HasColumnName("club1_id");

                    b.Property<Guid>("Club2Id")
                        .HasColumnType("uuid")
                        .HasColumnName("club2_id");

                    b.Property<Guid?>("CoachId")
                        .HasColumnType("uuid")
                        .HasColumnName("coach_id");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("date");

                    b.Property<int>("Minutes_added")
                        .HasColumnType("integer")
                        .HasColumnName("minutes_added");

                    b.Property<Guid>("RefereeId")
                        .HasColumnType("uuid")
                        .HasColumnName("referee_id");

                    b.Property<Guid>("StadiumId")
                        .HasColumnType("uuid")
                        .HasColumnName("stadium_id");

                    b.Property<Guid?>("Team1Id")
                        .HasColumnType("uuid")
                        .HasColumnName("team1_id");

                    b.Property<Guid?>("Team2Id")
                        .HasColumnType("uuid")
                        .HasColumnName("team2_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Club1Id");

                    b.HasIndex("Club2Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("RefereeId");

                    b.HasIndex("StadiumId");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("CHL.Domain.Models.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid?>("Club_id")
                        .HasColumnType("uuid")
                        .HasColumnName("club_id");

                    b.Property<Guid>("Coach_id")
                        .HasColumnType("uuid")
                        .HasColumnName("coach_id");

                    b.Property<Guid>("Game_id")
                        .HasColumnType("uuid")
                        .HasColumnName("game_id");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<Guid>("Player_id")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<Guid>("Referee_id")
                        .HasColumnType("uuid")
                        .HasColumnName("referee_id");

                    b.Property<Guid>("Stadium_id")
                        .HasColumnType("uuid")
                        .HasColumnName("stadium_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Club_id");

                    b.HasIndex("Coach_id");

                    b.HasIndex("Game_id");

                    b.HasIndex("Player_id");

                    b.HasIndex("Referee_id");

                    b.HasIndex("Stadium_id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("CHL.Domain.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("Club_id")
                        .HasColumnType("uuid")
                        .HasColumnName("club_id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dob");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<Guid?>("GameId")
                        .HasColumnType("uuid")
                        .HasColumnName("game_id");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<bool>("Is_injured")
                        .HasColumnType("boolean")
                        .HasColumnName("is_injured");

                    b.Property<int>("Overall_goals")
                        .HasColumnType("integer")
                        .HasColumnName("overall_goals");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("position");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("price");

                    b.Property<int>("Red_cards")
                        .HasColumnType("integer")
                        .HasColumnName("red_cards");

                    b.Property<Guid>("Team_id")
                        .HasColumnType("uuid")
                        .HasColumnName("team_id");

                    b.Property<int>("Yellow_cards")
                        .HasColumnType("integer")
                        .HasColumnName("yellow_cards");

                    b.HasKey("Id");

                    b.HasIndex("Club_id");

                    b.HasIndex("GameId");

                    b.HasIndex("Team_id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("CHL.Domain.Models.Referee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<int>("Experience")
                        .HasColumnType("integer")
                        .HasColumnName("experience");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.HasKey("Id");

                    b.ToTable("Referees");
                });

            modelBuilder.Entity("CHL.Domain.Models.Scene", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("Game_id")
                        .HasColumnType("uuid")
                        .HasColumnName("game_id");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<Guid>("Player_id")
                        .HasColumnType("uuid")
                        .HasColumnName("player_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Game_id");

                    b.HasIndex("Player_id");

                    b.ToTable("Scenes");
                });

            modelBuilder.Entity("CHL.Domain.Models.Stadium", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("Club_id")
                        .HasColumnType("uuid")
                        .HasColumnName("club_id");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dob");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("img");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("Size")
                        .HasColumnType("integer")
                        .HasColumnName("size");

                    b.HasKey("Id");

                    b.HasIndex("Club_id")
                        .IsUnique();

                    b.ToTable("Stadiums");
                });

            modelBuilder.Entity("CHL.Domain.Models.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("ClubId")
                        .HasColumnType("uuid")
                        .HasColumnName("club_id");

                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid")
                        .HasColumnName("coach_id");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("goals");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("CoachId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("CHL.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Dob")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fullname");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("location");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CHL.Domain.Models.Coach", b =>
                {
                    b.HasOne("CHL.Domain.Models.Club", "Club")
                        .WithOne("Coach")
                        .HasForeignKey("CHL.Domain.Models.Coach", "Club_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("CHL.Domain.Models.Game", b =>
                {
                    b.HasOne("CHL.Domain.Models.Club", "Club1")
                        .WithMany("GamesAsClub1")
                        .HasForeignKey("Club1Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Club", "Club2")
                        .WithMany("GamesAsClub2")
                        .HasForeignKey("Club2Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Coach", null)
                        .WithMany("Games")
                        .HasForeignKey("CoachId");

                    b.HasOne("CHL.Domain.Models.Referee", "Referee")
                        .WithMany("Games")
                        .HasForeignKey("RefereeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Stadium", "Stadium")
                        .WithMany("Games")
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Team", "Team1")
                        .WithMany("GamesAsTeam1")
                        .HasForeignKey("Team1Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CHL.Domain.Models.Team", "Team2")
                        .WithMany("GamesAsTeam2")
                        .HasForeignKey("Team2Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Club1");

                    b.Navigation("Club2");

                    b.Navigation("Referee");

                    b.Navigation("Stadium");

                    b.Navigation("Team1");

                    b.Navigation("Team2");
                });

            modelBuilder.Entity("CHL.Domain.Models.News", b =>
                {
                    b.HasOne("CHL.Domain.Models.Club", "Club")
                        .WithMany("NewsList")
                        .HasForeignKey("Club_id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("CHL.Domain.Models.Coach", "Coach")
                        .WithMany("NewsList")
                        .HasForeignKey("Coach_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Game", "Game")
                        .WithMany("NewsList")
                        .HasForeignKey("Game_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Player", "Player")
                        .WithMany("NewsList")
                        .HasForeignKey("Player_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Referee", "Referee")
                        .WithMany("NewsList")
                        .HasForeignKey("Referee_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Stadium", "Stadium")
                        .WithMany("NewsList")
                        .HasForeignKey("Stadium_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Coach");

                    b.Navigation("Game");

                    b.Navigation("Player");

                    b.Navigation("Referee");

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("CHL.Domain.Models.Player", b =>
                {
                    b.HasOne("CHL.Domain.Models.Club", "Club")
                        .WithMany("Players")
                        .HasForeignKey("Club_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Game", null)
                        .WithMany("GoalScorers")
                        .HasForeignKey("GameId");

                    b.HasOne("CHL.Domain.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("Team_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("CHL.Domain.Models.Scene", b =>
                {
                    b.HasOne("CHL.Domain.Models.Game", "Game")
                        .WithMany("Scenes")
                        .HasForeignKey("Game_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Player", "Player")
                        .WithMany("Scenes")
                        .HasForeignKey("Player_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("CHL.Domain.Models.Stadium", b =>
                {
                    b.HasOne("CHL.Domain.Models.Club", "Club")
                        .WithOne("Stadium")
                        .HasForeignKey("CHL.Domain.Models.Stadium", "Club_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("CHL.Domain.Models.Team", b =>
                {
                    b.HasOne("CHL.Domain.Models.Club", "Club")
                        .WithMany("Teams")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CHL.Domain.Models.Coach", "Coach")
                        .WithMany("Teams")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Club");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("CHL.Domain.Models.Club", b =>
                {
                    b.Navigation("Coach")
                        .IsRequired();

                    b.Navigation("GamesAsClub1");

                    b.Navigation("GamesAsClub2");

                    b.Navigation("NewsList");

                    b.Navigation("Players");

                    b.Navigation("Stadium")
                        .IsRequired();

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("CHL.Domain.Models.Coach", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("NewsList");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("CHL.Domain.Models.Game", b =>
                {
                    b.Navigation("GoalScorers");

                    b.Navigation("NewsList");

                    b.Navigation("Scenes");
                });

            modelBuilder.Entity("CHL.Domain.Models.Player", b =>
                {
                    b.Navigation("NewsList");

                    b.Navigation("Scenes");
                });

            modelBuilder.Entity("CHL.Domain.Models.Referee", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("NewsList");
                });

            modelBuilder.Entity("CHL.Domain.Models.Stadium", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("NewsList");
                });

            modelBuilder.Entity("CHL.Domain.Models.Team", b =>
                {
                    b.Navigation("GamesAsTeam1");

                    b.Navigation("GamesAsTeam2");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
